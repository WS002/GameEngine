#version 330 core

// Interpolated values from the vertex shaders
in vec3 UV;

in vec4 normal;

// Interpolated values from the vertex shaders
//in vec3 fragmentColor;

// Ouput data
out vec4 color;

// Values that stay constant for the whole mesh.
uniform samplerCube myTextureSampler;


uniform vec4 lightPos;
in vec4 position;

void main(){

         //vec4 norm = normalize(normal);
         //vec4 lightDir = normalize(lightPos - position);

        // Output color = color of the texture at the specified UV

        //vec4 objectColor  = textureCube( myTextureSampler, UV );

        //vec4 ambientComponent = vec4(0.7f);
        //vec4 diffuseComponent = vec4(0.5f);


        //float diffuse = max(dot(norm, lightDir), 0.0);
        //diffuseComponent = diffuse * diffuseComponent;

        //vec4 result = ambientComponent * objectColor;
        color = vec4(1.0f, 0.0f, 0.0f, 1.0f);
}
