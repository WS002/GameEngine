#version 330 core

in vec2 TexCoords;
in vec3 Normal;
in vec3 FragPos;

out vec4 color;

uniform sampler2D texture_1;
uniform vec3 lightPos;
uniform vec3 viewPos;

void main()
{


    vec3 lightColor = vec3(1.0f, 1.0f, 1.0f);
    float ambientStrength = 0.1f;
    vec3 ambient = ambientStrength * lightColor;

    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(lightPos - FragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;

    float specularStrength = 1.0f;
    vec3 viewDir = normalize(viewPos - FragPos);
    vec3 reflectDir = reflect(-lightDir, norm);
    float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
    vec3 specularColor = vec3(1.0f, 0.0f, 0.0f);
    vec3 specular = specularStrength * spec * specularColor;

    vec4 texture = vec4(texture(texture_1, TexCoords));
    //vec4 objectColor = vec3(1.0f, 1.0f, 1.0f, 1.0f);
    color = (vec4(ambient, 1.0f) + vec4(diffuse, 1.0f) + vec4(specular, 1.0f)) * texture;

}
